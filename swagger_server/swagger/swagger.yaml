openapi: 3.0.1
info:
  title: AdoptACutie
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://adoptacutie.zouzland.com
tags:
- name: pet
  description: Everything about your Pets
  externalDocs:
    description: Find out more
    url: http://swagger.io
paths:
  /pet:
    get:
      tags:
      - pet
      summary: Get list of pets
      operationId: get_pets
      parameters:
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: The numbers of items to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: no_photo
        in: query
        description: Get photos of not
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "405":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.pet_controller
    put:
      tags:
      - pet
      summary: Update an existing pet
      operationId: update_pet
      requestBody:
        description: Pet object that needs to be added to the service
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Pet not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.pet_controller
    post:
      tags:
      - pet
      summary: Add new pet to service
      operationId: add_pet
      requestBody:
        description: Pet object that needs to be added to the service
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.pet_controller
  /pet/{petId}:
    get:
      tags:
      - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: get_pet_by_id
      parameters:
      - name: petId
        in: path
        description: ID of pet to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Pet not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.pet_controller
    delete:
      tags:
      - pet
      summary: Deletes a pet
      operationId: delete_pet
      parameters:
      - name: api_key
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: petId
        in: path
        description: Pet id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Pet not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.pet_controller
  /pet/{petId}/predict:
    get:
      tags:
      - pet
      summary: get an animal prediction
      operationId: predict_adoption_speed
      parameters:
      - name: petId
        in: path
        description: ID of pet to predict
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.pet_controller
  /pet/{petId}/uploadImage:
    post:
      tags:
      - pet
      summary: uploads an image
      operationId: upload_file
      parameters:
      - name: petId
        in: path
        description: ID of pet to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-openapi-router-controller: swagger_server.controllers.pet_controller
components:
  schemas:
    Category:
      type: integer
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    Type:
      type: string
      enum:
      - Cat
      - Dog
    Gender:
      type: string
      enum:
      - Male
      - Female
    MaturitySize:
      type: integer
      enum:
      - 1
      - 2
      - 3
      - 4
    Health:
      type: integer
      enum:
      - 1
      - 2
      - 3
    FurLength:
      type: integer
      enum:
      - 1
      - 2
      - 3
      - 4
    Vaccinated:
      type: integer
      enum:
      - 1
      - 2
      - 3
    Sterilized:
      type: integer
      enum:
      - 1
      - 2
      - 3
    Color:
      required:
      - id
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
      example:
        id: 5
        label: label
    Breed:
      required:
      - id
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
      example:
        id: 5
        label: label
    Pet:
      required:
      - age
      - breed1
      - color1
      - dewormed
      - fee
      - furLength
      - health
      - maturitySize
      - name
      - sterilized
      - vaccinated
      type: object
      properties:
        id:
          type: integer
          format: int64
        adoptionSpeed:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: Rex
        age:
          type: integer
          format: int64
        breed1:
          $ref: '#/components/schemas/Breed'
        breed2:
          $ref: '#/components/schemas/Breed'
        gender:
          $ref: '#/components/schemas/Gender'
        color1:
          $ref: '#/components/schemas/Color'
        color2:
          $ref: '#/components/schemas/Color'
        color3:
          $ref: '#/components/schemas/Color'
        maturitySize:
          $ref: '#/components/schemas/MaturitySize'
        furLength:
          $ref: '#/components/schemas/FurLength'
        vaccinated:
          $ref: '#/components/schemas/Vaccinated'
        health:
          $ref: '#/components/schemas/Health'
        sterilized:
          $ref: '#/components/schemas/Sterilized'
        dewormed:
          type: boolean
        fee:
          type: number
          format: double
        photo:
          type: string
        animalType:
          $ref: '#/components/schemas/Type'
      example:
        maturitySize: 2
        gender: Male
        fee: 4.145608029883936
        animalType: Cat
        health: 3
        photo: photo
        vaccinated: 9
        sterilized: 2
        breed1:
          id: 5
          label: label
        adoptionSpeed: 6
        furLength: 7
        color1:
          id: 5
          label: label
        name: Rex
        id: 0
        age: 1
        dewormed: true
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      example:
        code: 0
        type: type
        message: message
    body:
      properties:
        additionalMetadata:
          type: string
          description: Additional data to pass to server
        file:
          type: string
          description: file to upload
          format: binary

